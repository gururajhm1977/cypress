Cypress_tags=smoke npx cypress run --env ENV=qa

Run as below from CLI
Cypress_tags=smoke,regression npx cypress run --env ENV=qa

using sorry cypress account 
npx currents run --parallel --record --key <your accountID> --ci-build-id cypress-test

// allure report 
http://blog.geveo.com/Allure-Report-Integration-with-Cypress

run this in local 
npx cypress run --env allure=true
to open report -- allure generate allure-results --clean -o allure-report && allure open

access UI http://127.0.0.1:52620/index.html

=======
confiure tresult free tool for reprorting 
run as ---- node runner.js

++++++++++++++++
AXE plugin 
https://timdeschryver.dev/blog/setting-up-cypress-with-axe-for-accessibility#automating-a-whole-website

+++++++++ monkey testing +++++
https://css-tricks.com/intro-monkey-testing-gremlins-js/

++++++ visual regression ++++

Updating snapshots
Run Cypress with --env updateSnapshots=true in order to update the base image files for all of your 
tests.

Preventing failures
Run Cypress with --env failOnSnapshotDiff=false in order to prevent test failures when an image diff 
does not pass.

Reporter
Run Cypress with --reporter cypress-image-snapshot/reporter in order to report snapshot diffs in 
your test results. This can be helpful to use with --env failOnSnapshotDiff=false in order to quickly 
view all failing snapshots and their diffs.

+++++ accessibility test +++++
https://timdeschryver.dev/blog/setting-up-cypress-with-axe-for-accessibility#the-result

++++ githib actions +++++
https://github.com/cypress-io/github-action#headless
https://github.com/cypress-io/github-action/tree/master/.github/workflows

++++ interseting api test blog ++++++
https://dev.to/muratkeremozcan/crud-api-testing-a-deployed-service-with-cypress-using-cy-api-spok-cypress-data-session-cypress-each-4mlg
